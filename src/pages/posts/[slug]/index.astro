---
import type { GetStaticPaths } from 'astro'
import { Icon } from 'astro-icon/components'
import { getEntry, render } from 'astro:content'
import { isoDate } from '~/date'
import Layout from '~/Layout.astro'
import { z } from 'zod'
import { getPosts } from '~/posts'
import silly from '~/content/silly.png'
import { Image } from 'astro:assets'

export const getStaticPaths: GetStaticPaths = async () => {
  const posts = await getPosts()
  return posts.map((post) => ({
    params: {
      slug: post.id,
    },
  }))
}

const paramsSchema = z.object({ slug: z.string() })

const { slug } = paramsSchema.parse(Astro.params)

const entry = await getEntry('posts', slug)

if (!entry) {
  throw new Error(`Unable to load post for slug ${JSON.stringify}`)
}

const { Content } = await render(entry)
const { title, description, date } = entry.data

const ogImage = new URL(
  `/posts/${entry.id}.png`,
  import.meta.env.SITE
).toString()
---

<Layout title={title} description={description} ogImage={ogImage}>
  <a href='/' class='inline-flex flex-row gap-1 items-center underline'>
    <Icon name='lucide:arrow-left' class='h-4 w-4' />
    Back
  </a>

  <article
    class='prose lg:prose-lg dark:prose-invert sm:justify-self-center pb-8'
  >
    <div class='flex flex-col'>
      <h2
        class='lg:text-4xl text-3xl leading-tight font-black'
        transition:name={`post-${entry.id}--title`}
      >
        {title}
      </h2>
      <div class='inline-flex flex-row items-center gap-1.5'>
        <Icon name='lucide:calendar' class='h-4 w-4' />
        <time
          class='text-md dark:text-slate-300 text-slate-600'
          transition:name={`post-${entry.id}--date`}
        >
          {isoDate(date)}
        </time>
      </div>
    </div>
    <Content />
    <Image
      transition:name='mackie'
      src={silly}
      height={200}
      alt='Mackie looking at the blog post'
      class='h-[200px] bottom-0 left-0 fixed grayscale hover:grayscale-0 duration-500 lg:block hidden'
    />
  </article>
</Layout>
